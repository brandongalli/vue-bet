/**
 * Documentation can automatically be generated by removing the map section and exporting as JSON
 * then running the Adobe jsonschema2md utility here: https://www.npmjs.com/package/@adobe/jsonschema2md
 */
export default {
  $schema: 'http://json-schema.org/draft-07/schema#',
  // Standard object mapping format. See this link for usage: https://www.npmjs.com/package/object-mapper
  map: {
    'toSourcesync': {
      'meta.start': {
        key: 'startTimeMs',
        transform: seconds => parseInt(seconds * 1000)
      },
      'meta.end': {
        key: 'endTimeMs',
        transform: seconds => parseInt(seconds * 1000)
      },
      'meta.thumbnail': {
        key: 'dataObject.mainImageUrl',
        transform: imageUrl => imageUrl || 'https://cdn.sourcesync.io/media/default-icon.png'
      },
      'version': 'mapped',
      'type': 'dataTypeName',
      'meta.display': 'dataObject.name',
      'meta.name': 'dataObject.data.name',
      'data.discription': 'dataObject.data.discription'
    }
  },
  'type': 'object',
  'required': ['version', 'type', 'data', 'meta'],
  'properties': {
    'version': {
      'type': 'integer',
      'minimum': 1
    },
    'type': {
      'type': 'string',
      'enum': ['thing']
    },
    'meta': {
      'type': 'object',
      'required': ['component', 'target', 'categories', 'subCategories', 'name', 'thumbnail', 'schema'],
      'properties': {
        'component': {
          'type': 'string'
        },
        'target': {
          'type': 'string',
          'enum': ['left', 'right', 'top', 'bottom', 'overlay', 'horizontal', 'vertical', 'any']
        },
        'categories': {
          'type': 'array'
        },
        'subCategories': {
          'type': 'array'
        },
        'name': {
          'type': 'string'
        },
        'thumbnail': {
          'type': 'string'
        },
        'schema': {
          'type': 'string'
        },
        'source': {
          'type': 'string'
        }
      }
    },
    'data': {
      'type': 'object',
      'properties': {
        'price': {
          'type': 'number'
        },
        'description': {
          'type': 'string'
        },
        'name': {
          'type': 'string'
        }
      }
    }
  }
}
